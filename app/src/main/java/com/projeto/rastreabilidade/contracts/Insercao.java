package com.projeto.rastreabilidade.contracts;

import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple5;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.5.16.
 */
@SuppressWarnings("rawtypes")
public class Insercao extends Contract {
    public static final String BINARY = "";

    public static final String FUNC_ADDINFO = "addInfo";

    public static final String FUNC_QUANTIDADEINFOS = "quantidadeInfos";

    public static final String FUNC_RASTREIOPROD = "rastreioProd";

    public static final String FUNC_VERIFICARINFO = "verificarInfo";

    @Deprecated
    protected Insercao(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Insercao(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Insercao(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Insercao(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<TransactionReceipt> addInfo(String hash, String day, String time, String place, String code, String codeAnterior, String addrSensor, Boolean access) {
        final Function function = new Function(
                FUNC_ADDINFO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(hash), 
                new org.web3j.abi.datatypes.Utf8String(day), 
                new org.web3j.abi.datatypes.Utf8String(time), 
                new org.web3j.abi.datatypes.Utf8String(place), 
                new org.web3j.abi.datatypes.Utf8String(code), 
                new org.web3j.abi.datatypes.Utf8String(codeAnterior), 
                new org.web3j.abi.datatypes.Address(160, addrSensor), 
                new org.web3j.abi.datatypes.Bool(access)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> quantidadeInfos() {
        final Function function = new Function(FUNC_QUANTIDADEINFOS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Tuple5<List<String>, List<String>, List<String>, List<String>, List<String>>> rastreioProd(String codeFinal, BigInteger quantidade) {
        final Function function = new Function(FUNC_RASTREIOPROD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(codeFinal), 
                new org.web3j.abi.datatypes.generated.Uint256(quantidade)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<DynamicArray<Address>>() {}));
        return new RemoteFunctionCall<Tuple5<List<String>, List<String>, List<String>, List<String>, List<String>>>(function,
                new Callable<Tuple5<List<String>, List<String>, List<String>, List<String>, List<String>>>() {
                    @Override
                    public Tuple5<List<String>, List<String>, List<String>, List<String>, List<String>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<List<String>, List<String>, List<String>, List<String>, List<String>>(
                                convertToNative((List<Utf8String>) results.get(0).getValue()), 
                                convertToNative((List<Utf8String>) results.get(1).getValue()), 
                                convertToNative((List<Utf8String>) results.get(2).getValue()), 
                                convertToNative((List<Utf8String>) results.get(3).getValue()), 
                                convertToNative((List<Address>) results.get(4).getValue()));
                    }
                });
    }

    public RemoteFunctionCall<Boolean> verificarInfo(String code) {
        final Function function = new Function(FUNC_VERIFICARINFO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(code)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    @Deprecated
    public static Insercao load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Insercao(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Insercao load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Insercao(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Insercao load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Insercao(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Insercao load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Insercao(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Insercao> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Insercao.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<Insercao> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Insercao.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Insercao> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Insercao.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Insercao> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Insercao.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}
